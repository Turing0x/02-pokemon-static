---
import type { GetStaticPaths } from "astro";
import PokemonCard from "../../components/PokemonCard.astro";
import type { PokemonListResponse } from "../../interfaces/pokemon-list.interface";
import MainLayout from "../../layouts/MainLayout.astro";
import NavBar from "../../components/NavBar.astro";

export const getStaticPaths = (async ({ paginate }) => {
  const response = await fetch("https://pokeapi.co/api/v2/pokemon?limit=50");
  if (!response.ok) return [];

  const { results } = (await response.json()) as PokemonListResponse;

  return paginate(results, {
    pageSize: 10,
  });
}) satisfies GetStaticPaths;

const { page } = Astro.props;
---

<MainLayout title="Pokemon Static | Home">
  <NavBar />

  <h1 class="text-3xl">Listado paginado de Pokemons</h1>
  <hr />

  <section aria-label="Listado paginado de Pokemons" class="mt-4 grid grid-cols-2 gap-4 md:grid-cols-2 lg:grid-cols-4">
    {page.data.map((pokemon) => <PokemonCard name={pokemon.name} id={Number(pokemon.url.split("/").at(-2))} />)}
  </section>

  <section class="mt-10 flex items-center gap-2">
    <a
      class:list={[
        "btn",
        {
          disabled: !page.url.prev,
        },
      ]}
      href={page.url.prev}>Anterior</a
    >
    <a
      class:list={[
        "btn",
        {
          disabled: !page.url.next,
        },
      ]}
      href={page.url.next}>Siguiente</a
    >

    <div class="flex flex-1"></div>
    <span>PÃ¡gina {page.currentPage} de {page.lastPage}</span>
  </section>
</MainLayout>

<style>
  .btn {
    @apply rounded bg-blue-500 p-2 text-white;
  }

  .disabled {
    @apply rounded bg-gray-600 p-2 text-gray-400;
  }
</style>
