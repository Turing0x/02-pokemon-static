---
import { Icon } from "astro-icon/components";
import type { GetStaticPaths } from "astro";

import type { PokemonListResponse } from "../../interfaces/pokemon-list.interface";
import PokemonCard from "../../components/PokemonCard.astro";
import MainLayout from "../../layouts/MainLayout.astro";

export const getStaticPaths = (async () => {
  const response = await fetch("https://pokeapi.co/api/v2/pokemon?limit=50");

  if (!response.ok) return [];

  const { results } = (await response.json()) as PokemonListResponse;

  return results.map((pokemon) => ({
    params: {
      id: pokemon.url.split("/").at(-2),
    },
    props: {
      name: pokemon.name,
    },
  }));
}) satisfies GetStaticPaths;

interface Props {
  name: string;
}

const { id } = Astro.params;
const { name } = Astro.props;

const audioUrl = `https://raw.githubusercontent.com/PokeAPI/cries/main/cries/pokemon/latest/${id}.ogg`;
---

<MainLayout title="Detalles del pokemon">
  <section class="mx-10 mt-10 flex flex-col items-center justify-center">
    <span class="flex items-center">
      <div>
        <a href="/">Regresar</a>
        <h1 class="text-5xl capitalize">{name}</h1>
      </div>

      <button id="btn-favorite" class="ml-4" data-name={name} data-id={id}>
        <Icon data-outline name="EmptyHeart" size={50} />
        <Icon data-fill class="hidden" name="FilledHeart" size={50} />
      </button>
    </span>

    <PokemonCard name={name!} id={+id!} isBig />
    <audio controls class="mt-5">
      <source src={audioUrl} type="audio/ogg" />
      Your browser does not support the audio element.
    </audio>
  </section>
</MainLayout>

<script>
  import type { FavoritePokemon } from "../../interfaces/favorite-pokemon";

  document.addEventListener("astro:page-load", () => {
    const btnFavorite = document.getElementById("btn-favorite") as HTMLButtonElement;
    if (!btnFavorite) return;

    const { name, id } = btnFavorite.dataset;

    const heartEmpty = document.querySelector("[data-outline]") as HTMLElement;
    const heartFilled = document.querySelector("[data-fill]") as HTMLElement;

    let favorites: Array<FavoritePokemon> = JSON.parse(localStorage.getItem("favorites") || "[]");
    const exist = favorites.some((pokemon) => pokemon.id === id);

    if (exist) {
      heartFilled.classList.remove("hidden");
      heartEmpty.classList.add("hidden");
    }

    btnFavorite.addEventListener("click", (e) => {
      e.preventDefault();

      const exist = favorites.some((pokemon) => pokemon.id === id);
      const pokemon: FavoritePokemon = { id: id!, name: name! };

      if (exist) {
        favorites = favorites.filter((pokemon) => pokemon.id !== pokemon.id);

        heartFilled.classList.add("hidden");
        heartEmpty.classList.remove("hidden");
      } else {
        favorites.push(pokemon);

        heartEmpty.classList.add("hidden");
        heartFilled.classList.remove("hidden");
      }

      localStorage.setItem("favorites", JSON.stringify(favorites));
    });
  });
</script>

<style>
  a {
    @apply text-blue-500 hover:underline;
  }

  #btn-favorite {
    @apply hover:animate-pulse;
  }
</style>
